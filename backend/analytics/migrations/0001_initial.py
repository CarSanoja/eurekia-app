# Generated by Django 5.0.1 on 2025-09-01 05:39

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RetentionCohort',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cohort_type', models.CharField(choices=[('daily', 'Daily Cohort'), ('weekly', 'Weekly Cohort'), ('monthly', 'Monthly Cohort')], max_length=10)),
                ('cohort_date', models.DateField()),
                ('period', models.PositiveIntegerField()),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('retention_rate', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'retention_cohorts',
                'indexes': [models.Index(fields=['cohort_type', 'cohort_date'], name='retention_c_cohort__c473b4_idx'), models.Index(fields=['retention_rate'], name='retention_c_retenti_cb8737_idx')],
                'unique_together': {('cohort_type', 'cohort_date', 'period')},
            },
        ),
        migrations.CreateModel(
            name='FeatureUsage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('feature', models.CharField(choices=[('habits', 'Habits Management'), ('mood_tracking', 'Mood Tracking'), ('mission_vision', 'Mission & Vision'), ('reports', 'Reports Generation'), ('streak_insurance', 'Streak Insurance'), ('notifications', 'Notifications'), ('dashboard', 'Dashboard'), ('onboarding', 'Onboarding'), ('settings', 'Settings'), ('admin_studio', 'Admin Studio')], max_length=50)),
                ('first_used', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_used', models.DateTimeField(default=django.utils.timezone.now)),
                ('usage_count', models.PositiveIntegerField(default=1)),
                ('total_time_seconds', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_usage', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'feature_usage',
                'indexes': [models.Index(fields=['user', 'feature'], name='feature_usa_user_id_b90dec_idx'), models.Index(fields=['feature', 'usage_count'], name='feature_usa_feature_8fc5e2_idx')],
                'unique_together': {('user', 'feature')},
            },
        ),
        migrations.CreateModel(
            name='UserEngagementMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('registration_date', models.DateTimeField()),
                ('last_active_date', models.DateTimeField(blank=True, null=True)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('total_session_time_seconds', models.PositiveIntegerField(default=0)),
                ('days_since_registration', models.PositiveIntegerField(default=0)),
                ('days_active', models.PositiveIntegerField(default=0)),
                ('habits_created', models.PositiveIntegerField(default=0)),
                ('habits_completed', models.PositiveIntegerField(default=0)),
                ('current_active_habits', models.PositiveIntegerField(default=0)),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('total_streak_days', models.PositiveIntegerField(default=0)),
                ('insurance_used', models.PositiveIntegerField(default=0)),
                ('comebacks_count', models.PositiveIntegerField(default=0)),
                ('activity_score', models.FloatField(default=0.0)),
                ('habit_consistency_score', models.FloatField(default=0.0)),
                ('feature_adoption_score', models.FloatField(default=0.0)),
                ('retention_risk_score', models.FloatField(default=0.0)),
                ('features_discovered', models.PositiveIntegerField(default=0)),
                ('features_actively_used', models.PositiveIntegerField(default=0)),
                ('milestones_reached', models.PositiveIntegerField(default=0)),
                ('badges_earned', models.PositiveIntegerField(default=0)),
                ('reports_generated', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_engagement_metrics',
                'indexes': [models.Index(fields=['activity_score'], name='user_engage_activit_bc9eba_idx'), models.Index(fields=['retention_risk_score'], name='user_engage_retenti_7619d9_idx'), models.Index(fields=['last_active_date'], name='user_engage_last_ac_98d10b_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('user_registered', 'User Registered'), ('user_login', 'User Login'), ('user_logout', 'User Logout'), ('habit_created', 'Habit Created'), ('habit_completed', 'Habit Completed'), ('habit_skipped', 'Habit Skipped'), ('habit_edited', 'Habit Edited'), ('habit_deleted', 'Habit Deleted'), ('streak_milestone', 'Streak Milestone Reached'), ('insurance_used', 'Streak Insurance Used'), ('comeback_detected', 'User Comeback Detected'), ('mission_created', 'Mission Created'), ('mission_updated', 'Mission Updated'), ('vision_created', 'Vision Created'), ('vision_updated', 'Vision Updated'), ('mood_recorded', 'Mood Recorded'), ('trigger_recorded', 'Trigger Recorded'), ('page_view', 'Page View'), ('feature_used', 'Feature Used'), ('notification_clicked', 'Notification Clicked'), ('report_generated', 'Report Generated'), ('settings_changed', 'Settings Changed'), ('badge_earned', 'Badge Earned'), ('milestone_celebrated', 'Milestone Celebrated'), ('achievement_unlocked', 'Achievement Unlocked')], max_length=50)),
                ('event_data', models.JSONField(blank=True, default=dict)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_events',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'event_type'], name='user_events_user_id_537eba_idx'), models.Index(fields=['event_type', 'timestamp'], name='user_events_event_t_2c71bd_idx'), models.Index(fields=['user', 'timestamp'], name='user_events_user_id_cf6bea_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('page_views', models.PositiveIntegerField(default=0)),
                ('events_count', models.PositiveIntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_sessions',
                'ordering': ['-start_time'],
                'indexes': [models.Index(fields=['user', 'start_time'], name='user_sessio_user_id_c66047_idx'), models.Index(fields=['session_id'], name='user_sessio_session_e62ba3_idx')],
            },
        ),
    ]
