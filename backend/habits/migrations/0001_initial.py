# Generated by Django 5.0.1 on 2025-09-01 02:53

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EnvPledge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField(help_text='Environmental pledge')),
                ('cadence', models.CharField(choices=[('weekly', 'Weekly'), ('daily', 'Daily')], default='weekly', max_length=20)),
                ('last_checkin_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='env_pledge', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'env_pledges',
            },
        ),
        migrations.CreateModel(
            name='Habit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('cadence', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly')], default='daily', max_length=20)),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Hard')], default=1)),
                ('anchor', models.TextField(blank=True, help_text='When/where to do this habit')),
                ('micro_habit', models.TextField(blank=True, help_text='Smallest version of this habit')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='habits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'habits',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Checkin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('value', models.BooleanField(help_text='True if completed, False if skipped')),
                ('note', models.TextField(blank=True)),
                ('used_insurance', models.BooleanField(default=False)),
                ('channel', models.CharField(choices=[('web', 'Web'), ('telegram', 'Telegram'), ('whatsapp', 'WhatsApp'), ('email', 'Email')], default='web', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkins', to='habits.habit')),
            ],
            options={
                'db_table': 'checkins',
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('skill', models.TextField(help_text='Skill or strength I want to develop')),
                ('weakness', models.TextField(help_text='Weakness I want to overcome')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mission', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'missions',
            },
        ),
        migrations.CreateModel(
            name='Mood',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('score', models.IntegerField(help_text='1-5 scale')),
                ('note', models.TextField(blank=True)),
                ('channel', models.CharField(choices=[('web', 'Web'), ('telegram', 'Telegram'), ('whatsapp', 'WhatsApp')], default='web', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'moods',
            },
        ),
        migrations.CreateModel(
            name='PlanIfThen',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('situation', models.TextField(help_text='If this happens...')),
                ('action', models.TextField(help_text='Then I will...')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='if_then_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'plan_if_thens',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Trigger',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField(help_text='What triggered you?')),
                ('response', models.TextField(blank=True, help_text='How you responded')),
                ('tags', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='triggers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'triggers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Vision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tags', models.JSONField(default=list, help_text='3 tags representing the vision')),
                ('summary', models.TextField(blank=True)),
                ('image_url', models.URLField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vision', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'visions',
            },
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('foundation', 'Foundation Badge'), ('consistency', 'Consistency Badge'), ('streak_7', '7-Day Streak'), ('streak_30', '30-Day Streak'), ('comeback', 'Comeback Badge'), ('mission_complete', 'Mission Complete')], max_length=50)),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'badges',
                'ordering': ['-awarded_at'],
                'unique_together': {('user', 'type')},
            },
        ),
        migrations.AddIndex(
            model_name='habit',
            index=models.Index(fields=['user', 'is_active'], name='habits_user_id_41ce3a_idx'),
        ),
        migrations.AddIndex(
            model_name='checkin',
            index=models.Index(fields=['habit', 'date'], name='checkins_habit_i_5c66f9_idx'),
        ),
        migrations.AddIndex(
            model_name='checkin',
            index=models.Index(fields=['date'], name='checkins_date_7c1edd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='checkin',
            unique_together={('habit', 'date')},
        ),
        migrations.AddIndex(
            model_name='mood',
            index=models.Index(fields=['user', 'date'], name='moods_user_id_a790d6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='mood',
            unique_together={('user', 'date')},
        ),
    ]
