# Generated by Django 5.0.1 on 2025-09-01 02:53

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('avatar_icon', models.CharField(blank=True, max_length=50)),
                ('avatar_color', models.CharField(default='#0ea5e9', max_length=7)),
                ('locale', models.CharField(default='en', max_length=5)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='ChannelPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('primary', models.CharField(choices=[('web', 'Web'), ('email', 'Email'), ('telegram', 'Telegram'), ('whatsapp', 'WhatsApp')], default='web', max_length=20)),
                ('allow_prompts', models.BooleanField(default=True)),
                ('quiet_hours', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'channel_preferences',
            },
        ),
        migrations.CreateModel(
            name='ContactMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('telegram', 'Telegram'), ('whatsapp', 'WhatsApp')], max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('verified', models.BooleanField(default=False)),
                ('consent', models.CharField(choices=[('pending', 'Pending'), ('granted', 'Granted'), ('revoked', 'Revoked')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'contact_methods',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(choices=[('student', 'Student'), ('coach', 'Coach'), ('admin', 'Admin')], max_length=20, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user_roles',
            },
        ),
    ]
