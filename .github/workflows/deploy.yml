name: Deploy to Production

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'
  workflow_dispatch:

jobs:
  deploy-backend:
    name: Deploy Backend to Railway
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install Railway CLI
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        echo "$HOME/.railway/bin" >> $GITHUB_PATH
        
    - name: Deploy to Railway
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: |
        cd backend
        railway login --token $RAILWAY_TOKEN
        railway up --detach
        
    - name: Wait for deployment
      run: |
        echo "Waiting for backend deployment to complete..."
        sleep 60
        
    - name: Health check
      run: |
        max_attempts=10
        attempt=1
        while [ $attempt -le $max_attempts ]; do
          echo "Health check attempt $attempt/$max_attempts"
          if curl -f https://eurekia-backend.up.railway.app/api/health/; then
            echo "Backend is healthy!"
            break
          else
            echo "Backend not ready yet, waiting..."
            sleep 30
            attempt=$((attempt + 1))
          fi
        done
        
        if [ $attempt -gt $max_attempts ]; then
          echo "Backend health check failed after $max_attempts attempts"
          exit 1
        fi

  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Build application
      working-directory: ./frontend
      env:
        NODE_ENV: production
        VITE_API_URL: https://eurekia-backend.up.railway.app/api
        VITE_WS_URL: wss://eurekia-backend.up.railway.app/ws
      run: npm run build:prod
      
    - name: Deploy to Vercel
      uses: vercel/action@v1
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--prod'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend

  post-deploy-tests:
    name: Post-Deployment Tests
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Test Backend API
      run: |
        echo "Testing backend API endpoints..."
        
        # Test health check
        curl -f https://eurekia-backend.up.railway.app/api/health/ || exit 1
        echo "‚úÖ Health check passed"
        
        # Test API info
        curl -f https://eurekia-backend.up.railway.app/api/info/ || exit 1
        echo "‚úÖ API info endpoint passed"
        
    - name: Test Frontend
      run: |
        echo "Testing frontend application..."
        
        # Test frontend is accessible
        curl -f https://eurekia-app.vercel.app/ || exit 1
        echo "‚úÖ Frontend is accessible"
        
        # Test that frontend serves the React app
        response=$(curl -s https://eurekia-app.vercel.app/)
        if echo "$response" | grep -q "Eurekia"; then
          echo "‚úÖ Frontend serves React application"
        else
          echo "‚ùå Frontend does not serve expected content"
          exit 1
        fi
        
    - name: Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://eurekia-app.vercel.app
        configPath: '.github/lighthouse/lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend, post-deploy-tests]
    if: always()
    
    steps:
    - name: Deployment Success
      if: needs.deploy-backend.result == 'success' && needs.deploy-frontend.result == 'success' && needs.post-deploy-tests.result == 'success'
      run: |
        echo "üéâ Deployment successful!"
        echo "Frontend: https://eurekia-app.vercel.app"
        echo "Backend: https://eurekia-backend.up.railway.app"
        
    - name: Deployment Failed
      if: needs.deploy-backend.result == 'failure' || needs.deploy-frontend.result == 'failure' || needs.post-deploy-tests.result == 'failure'
      run: |
        echo "‚ùå Deployment failed!"
        echo "Backend status: ${{ needs.deploy-backend.result }}"
        echo "Frontend status: ${{ needs.deploy-frontend.result }}"
        echo "Tests status: ${{ needs.post-deploy-tests.result }}"
        exit 1